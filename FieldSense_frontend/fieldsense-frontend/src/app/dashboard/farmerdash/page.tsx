"use client";

import { useState, useEffect } from 'react';
import { 
  Upload, 
  FileText, 
  MapPin, 
  User, 
  Home,
  TrendingUp,
  CloudRain,
  Thermometer,
  Activity,
  Calendar,
  Bell,
  Camera,
  BarChart3,
  Leaf,
  Droplets,
  AlertTriangle,
  CheckCircle,
  Globe,
  Plus,
  Download,
  Smartphone
} from 'lucide-react';


import styles from '@/app/dashboard/farmerdash/FarmerDashboard.module.scss';


const FarmerDashboard = () => {
  const [activeTab, setActiveTab] = useState('home');
  const [language, setLanguage] = useState('en');
  const [currentWeather, setCurrentWeather] = useState({
    temp: 28,
    humidity: 65,
    rainfall: 20
  });

  // Mock data
  const farmerData = {
    name: "рд░рд╛рдХреЗрд╢ рд╢рд░реНрдорд╛",
    phone: "+91 98765 43210",
    village: "Kharadi Village",
    state: "Maharashtra",
    farms: [
      { id: 1, name: "рдореБрдЦреНрдп рдЦреЗрдд", size: "2.5 acres", crop: "рдЧреЗрд╣реВрдВ", location: "Plot A1" },
      { id: 2, name: "рджрдХреНрд╖рд┐рдг рдЦреЗрдд", size: "1.8 acres", crop: "рдЪрдирд╛", location: "Plot B2" }
    ]
  };

  const fpiScore = 78;
  const lastSoilReport = "15 days ago";
  const nextCropSuggestion = "рд╕реЛрдпрд╛рдмреАрди";

  const languages = [
    { code: 'en', name: 'English', flag: 'ЁЯЗ║ЁЯЗ╕' },
    { code: 'hi', name: 'рд╣рд┐рдВрджреА', flag: 'ЁЯЗоЁЯЗ│' },
    { code: 'mr', name: 'рдорд░рд╛рдареА', flag: 'ЁЯЪй' }
  ];

  const navigationTabs = [
    { id: 'home', label: 'рд╣реЛрдо', icon: Home },
    { id: 'uploads', label: 'рдЕрдкрд▓реЛрдб', icon: Upload },
    { id: 'analysis', label: 'рд╡рд┐рд╢реНрд▓реЗрд╖рдг', icon: BarChart3 },
    { id: 'advisory', label: 'рд╕рд▓рд╛рд╣', icon: FileText },
    { id: 'farms', label: 'рдЦреЗрдд', icon: MapPin },
    { id: 'profile', label: 'рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓', icon: User }
  ];

  const renderHomeContent = () => (
    <div className={styles.homeContent}>
      {/* Summary Cards */}
      <div className={styles.summaryGrid}>
        <div className={styles.summaryCard}>
          <div className={styles.cardHeader}>
            <FileText className={styles.cardIcon} />
            <span className={styles.cardTitle}>рдЕрдВрддрд┐рдо рдорд┐рдЯреНрдЯреА рд░рд┐рдкреЛрд░реНрдЯ</span>
          </div>
          <div className={styles.cardValue}>{lastSoilReport}</div>
          <div className={styles.cardStatus}>
            <CheckCircle className={styles.statusIcon} />
            <span>рд╕реНрд╡рд╕реНрде</span>
          </div>
        </div>

        <div className={styles.summaryCard}>
          <div className={styles.cardHeader}>
            <Leaf className={styles.cardIcon} />
            <span className={styles.cardTitle}>рдЕрдЧрд▓реА рдлрд╕рд▓ рд╕реБрдЭрд╛рд╡</span>
          </div>
          <div className={styles.cardValue}>{nextCropSuggestion}</div>
          <div className={styles.cardSubtext}>рдЦрд░реАрдл рд╕реАрдЬрди рдХреЗ рд▓рд┐рдП</div>
        </div>

        <div className={styles.summaryCard}>
          <div className={styles.cardHeader}>
            <CloudRain className={styles.cardIcon} />
            <span className={styles.cardTitle}>рдЖрдЬ рдХрд╛ рдореМрд╕рдо</span>
          </div>
          <div className={styles.weatherInfo}>
            <div className={styles.weatherMain}>
              <Thermometer className={styles.weatherIcon} />
              <span className={styles.temperature}>{currentWeather.temp}┬░C</span>
            </div>
            <div className={styles.weatherDetails}>
              <div className={styles.weatherItem}>
                <Droplets className={styles.weatherIcon} />
                <span>{currentWeather.humidity}% рдирдореА</span>
              </div>
              <div className={styles.weatherItem}>
                <CloudRain className={styles.weatherIcon} />
                <span>{currentWeather.rainfall}% рдмрд╛рд░рд┐рд╢</span>
              </div>
            </div>
          </div>
        </div>

        <div className={styles.summaryCard}>
          <div className={styles.cardHeader}>
            <Activity className={styles.cardIcon} />
            <span className={styles.cardTitle}>FPI рд╕реНрдХреЛрд░</span>
          </div>
          <div className={styles.scoreContainer}>
            <div className={styles.scoreCircle}>
              <svg className={styles.progressRing} viewBox="0 0 100 100">
                <circle
                  className={styles.progressRingBg}
                  cx="50"
                  cy="50"
                  r="40"
                />
                <circle
                  className={styles.progressRingFill}
                  cx="50"
                  cy="50"
                  r="40"
                  style={{
                    strokeDasharray: `${2 * Math.PI * 40}`,
                    strokeDashoffset: `${2 * Math.PI * 40 * (1 - fpiScore / 100)}`
                  }}
                />
              </svg>
              <div className={styles.scoreText}>
                <span className={styles.scoreValue}>{fpiScore}</span>
                <span className={styles.scoreLabel}>рдЕрдЪреНрдЫрд╛</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Quick Actions */}
      <div className={styles.quickActions}>
        <h3 className={styles.sectionTitle}>рддреНрд╡рд░рд┐рдд рдХрд╛рд░реНрдп</h3>
        <div className={styles.actionGrid}>
          <button 
            className={styles.actionBtn}
            onClick={() => setActiveTab('uploads')}
          >
            <Upload className={styles.actionIcon} />
            <span>рдбреЗрдЯрд╛ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ</span>
          </button>
          <button 
            className={styles.actionBtn}
            onClick={() => setActiveTab('advisory')}
          >
            <FileText className={styles.actionIcon} />
            <span>рд╕рд▓рд╛рд╣ рджреЗрдЦреЗрдВ</span>
          </button>
          <button 
            className={styles.actionBtn}
            onClick={() => setActiveTab('farms')}
          >
            <MapPin className={styles.actionIcon} />
            <span>рдореЗрд░реЗ рдЦреЗрдд</span>
          </button>
          <button className={styles.actionBtn}>
            <Smartphone className={styles.actionIcon} />
            <span>рдРрдк рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ</span>
          </button>
        </div>
      </div>

      {/* Recent Activity */}
      <div className={styles.recentActivity}>
        <h3 className={styles.sectionTitle}>рд╣рд╛рд▓ рдХреА рдЧрддрд┐рд╡рд┐рдзрд┐</h3>
        <div className={styles.activityList}>
          <div className={styles.activityItem}>
            <div className={styles.activityIcon}>
              <FileText />
            </div>
            <div className={styles.activityContent}>
              <span className={styles.activityTitle}>рдорд┐рдЯреНрдЯреА рд░рд┐рдкреЛрд░реНрдЯ рдЕрдкрд▓реЛрдб рдХреА рдЧрдИ</span>
              <span className={styles.activityTime}>2 рджрд┐рди рдкрд╣рд▓реЗ</span>
            </div>
          </div>
          <div className={styles.activityItem}>
            <div className={styles.activityIcon}>
              <Bell />
            </div>
            <div className={styles.activityContent}>
              <span className={styles.activityTitle}>рдХреАрдЯ рдЪреЗрддрд╛рд╡рдиреА рдкреНрд░рд╛рдкреНрдд</span>
              <span className={styles.activityTime}>5 рджрд┐рди рдкрд╣рд▓реЗ</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderUploadsContent = () => (
    <div className={styles.uploadsContent}>
      <h2 className={styles.pageTitle}>рдбреЗрдЯрд╛ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ</h2>
      
      <div className={styles.uploadOptions}>
        <div className={styles.uploadCard}>
          <Camera className={styles.uploadIcon} />
          <h3 className={styles.uploadTitle}>рдЦреЗрдд рдХреА рддрд╕реНрд╡реАрд░ рд▓реЗрдВ</h3>
          <p className={styles.uploadDescription}>рдлрд╕рд▓ рдпрд╛ рдорд┐рдЯреНрдЯреА рдХреА рддрд╕реНрд╡реАрд░ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ</p>
          <button className={styles.uploadBtn}>
            <Camera />
            рдХреИрдорд░рд╛ рдЦреЛрд▓реЗрдВ
          </button>
        </div>

        <div className={styles.uploadCard}>
          <Upload className={styles.uploadIcon} />
          <h3 className={styles.uploadTitle}>рдлрд╝рд╛рдЗрд▓ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ</h3>
          <p className={styles.uploadDescription}>CSV, PDF рдпрд╛ рдЗрдореЗрдЬ рдлрд╝рд╛рдЗрд▓реЗрдВ</p>
          <button className={styles.uploadBtn}>
            <Upload />
            рдлрд╝рд╛рдЗрд▓ рдЪреБрдиреЗрдВ
          </button>
        </div>
      </div>

      <div className={styles.uploadHistory}>
        <h3 className={styles.sectionTitle}>рдЕрдкрд▓реЛрдб рдЗрддрд┐рд╣рд╛рд╕</h3>
        <div className={styles.historyList}>
          <div className={styles.historyItem}>
            <div className={styles.historyIcon}>
              <FileText />
            </div>
            <div className={styles.historyContent}>
              <span className={styles.historyTitle}>soil_report_march.pdf</span>
              <span className={styles.historyDate}>15 рдорд╛рд░реНрдЪ 2025</span>
            </div>
            <div className={styles.historyStatus}>
              <CheckCircle className={styles.statusSuccess} />
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderAnalysisContent = () => (
    <div className={styles.analysisContent}>
      <h2 className={styles.pageTitle}>рд╡рд┐рд╢реНрд▓реЗрд╖рдг рд░рд┐рдкреЛрд░реНрдЯ</h2>
      
      <div className={styles.analysisGrid}>
        <div className={styles.analysisCard}>
          <h3 className={styles.cardTitle}>рдорд┐рдЯреНрдЯреА рдкреЛрд╖рдХ рддрддреНрд╡</h3>
          <div className={styles.nutrientBars}>
            <div className={styles.nutrientItem}>
              <span>рдирд╛рдЗрдЯреНрд░реЛрдЬрди (N)</span>
              <div className={styles.progressBar}>
                <div className={styles.progress} style={{width: '75%'}}></div>
              </div>
              <span>75%</span>
            </div>
            <div className={styles.nutrientItem}>
              <span>рдлреЙрд╕реНрдлреЛрд░рд╕ (P)</span>
              <div className={styles.progressBar}>
                <div className={styles.progress} style={{width: '60%'}}></div>
              </div>
              <span>60%</span>
            </div>
            <div className={styles.nutrientItem}>
              <span>рдкреЛрдЯреЗрд╢рд┐рдпрдо (K)</span>
              <div className={styles.progressBar}>
                <div className={styles.progress} style={{width: '85%'}}></div>
              </div>
              <span>85%</span>
            </div>
          </div>
        </div>

        <div className={styles.analysisCard}>
          <h3 className={styles.cardTitle}>рдлрд╕рд▓ рдЙрддреНрдкрд╛рджрди рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди</h3>
          <div className={styles.yieldGauge}>
            <div className={styles.gaugeContainer}>
              <div className={styles.gaugeValue}>4.2</div>
              <div className={styles.gaugeUnit}>рдЯрди/рдПрдХрдбрд╝</div>
            </div>
          </div>
        </div>

        <div className={styles.analysisCard}>
          <h3 className={styles.cardTitle}>рдХреАрдЯ-рд░реЛрдЧ рдЬреЛрдЦрд┐рдо</h3>
          <div className={styles.riskIndicators}>
            <div className={styles.riskItem}>
              <div className={styles.riskLevel} data-level="low">
                <CheckCircle />
              </div>
              <span>рдХрдо рдЬреЛрдЦрд┐рдо</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderAdvisoryContent = () => (
    <div className={styles.advisoryContent}>
      <h2 className={styles.pageTitle}>рдХреГрд╖рд┐ рд╕рд▓рд╛рд╣</h2>
      
      <div className={styles.advisoryCards}>
        <div className={styles.advisoryCard}>
          <div className={styles.advisoryHeader}>
            <Droplets className={styles.advisoryIcon} />
            <h3>рд╕рд┐рдВрдЪрд╛рдИ рд╕реБрдЭрд╛рд╡</h3>
          </div>
          <p className={styles.advisoryText}>
            рдЗрд╕ рд╕рдкреНрддрд╛рд╣ 2 рдмрд╛рд░ рдкрд╛рдиреА рджреЗрдВред рдЕрдЧрд▓реА рд╕рд┐рдВрдЪрд╛рдИ: рдХрд▓ рд╕реБрдмрд╣
          </p>
        </div>

        <div className={styles.advisoryCard}>
          <div className={styles.advisoryHeader}>
            <Leaf className={styles.advisoryIcon} />
            <h3>рдЙрд░реНрд╡рд░рдХ рд╕рд┐рдлрд╛рд░рд┐рд╢</h3>
          </div>
          <p className={styles.advisoryText}>
            20 рдХрд┐рд▓реЛ рдпреВрд░рд┐рдпрд╛ рдкреНрд░рддрд┐ рдПрдХрдбрд╝ рдЫрд┐рдбрд╝рдХрд╛рд╡ рдХрд░реЗрдВ
          </p>
        </div>

        <div className={styles.advisoryCard}>
          <div className={styles.advisoryHeader}>
            <AlertTriangle className={styles.advisoryIcon} />
            <h3>рдХреАрдЯ рдЪреЗрддрд╛рд╡рдиреА</h3>
          </div>
          <p className={styles.advisoryText}>
            2 рджрд┐рди рдХреЗ рдЕрдВрджрд░ рдиреАрдо рдХрд╛ рддреЗрд▓ рдЫрд┐рдбрд╝рдХрд╛рд╡ рдХрд░реЗрдВ
          </p>
        </div>
      </div>

      <button className={styles.downloadBtn}>
        <Download />
        PDF рд░рд┐рдкреЛрд░реНрдЯ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ
      </button>
    </div>
  );

  const renderFarmsContent = () => (
    <div className={styles.farmsContent}>
      <div className={styles.farmsHeader}>
        <h2 className={styles.pageTitle}>рдореЗрд░реЗ рдЦреЗрдд</h2>
        <button className={styles.addFarmBtn}>
          <Plus />
          рдирдпрд╛ рдЦреЗрдд рдЬреЛрдбрд╝реЗрдВ
        </button>
      </div>
      
      <div className={styles.farmsList}>
        {farmerData.farms.map((farm) => (
          <div key={farm.id} className={styles.farmCard}>
            <div className={styles.farmInfo}>
              <h3 className={styles.farmName}>{farm.name}</h3>
              <div className={styles.farmDetails}>
                <span>{farm.size} тАв {farm.crop}</span>
                <span className={styles.farmLocation}>
                  <MapPin />
                  {farm.location}
                </span>
              </div>
            </div>
            <div className={styles.farmActions}>
              <button className={styles.farmActionBtn}>
                <BarChart3 />
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );

  const renderProfileContent = () => (
    <div className={styles.profileContent}>
      <h2 className={styles.pageTitle}>рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓</h2>
      
      <div className={styles.profileCard}>
        <div className={styles.profileHeader}>
          <div className={styles.profileAvatar}>
            <User />
          </div>
          <div className={styles.profileInfo}>
            <h3 className={styles.profileName}>{farmerData.name}</h3>
            <p className={styles.profilePhone}>{farmerData.phone}</p>
          </div>
        </div>
        
        <div className={styles.profileDetails}>
          <div className={styles.profileRow}>
            <span className={styles.profileLabel}>рдЧрд╛рдВрд╡:</span>
            <span className={styles.profileValue}>{farmerData.village}</span>
          </div>
          <div className={styles.profileRow}>
            <span className={styles.profileLabel}>рд░рд╛рдЬреНрдп:</span>
            <span className={styles.profileValue}>{farmerData.state}</span>
          </div>
        </div>
      </div>
    </div>
  );

  const renderContent = () => {
    switch(activeTab) {
      case 'home': return renderHomeContent();
      case 'uploads': return renderUploadsContent();
      case 'analysis': return renderAnalysisContent();
      case 'advisory': return renderAdvisoryContent();
      case 'farms': return renderFarmsContent();
      case 'profile': return renderProfileContent();
      default: return renderHomeContent();
    }
  };

  return (
    <div className={styles.dashboard}>
      {/* Header */}
      <header className={styles.header}>
        <div className={styles.headerContent}>
          <div className={styles.logo}>
            <span className={styles.logoIcon}>ЁЯМ▒</span>
            <span className={styles.logoText}>FieldSense</span>
          </div>
          
          <div className={styles.headerActions}>
            <div className={styles.languageToggle}>
              <Globe className={styles.toggleIcon} />
              <select 
                value={language} 
                onChange={(e) => setLanguage(e.target.value)}
                className={styles.languageSelect}
              >
                {languages.map((lang) => (
                  <option key={lang.code} value={lang.code}>
                    {lang.flag} {lang.name}
                  </option>
                ))}
              </select>
            </div>
            
            <button className={styles.profileBtn}>
              <User />
            </button>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className={styles.main}>
        {renderContent()}
      </main>

      {/* Bottom Navigation */}
      <nav className={styles.bottomNav}>
        {navigationTabs.map((tab) => (
          <button
            key={tab.id}
            className={`${styles.navTab} ${activeTab === tab.id ? styles.active : ''}`}
            onClick={() => setActiveTab(tab.id)}
          >
            <tab.icon className={styles.navIcon} />
            <span className={styles.navLabel}>{tab.label}</span>
          </button>
        ))}
      </nav>
    </div>
  );
};

export default FarmerDashboard;
